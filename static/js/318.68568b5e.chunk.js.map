{"version":3,"file":"static/js/318.68568b5e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Spinner/Spinner.jsx","components/Contacts/ContactsForm/ContactForm.jsx","components/Contacts/ContactsItem/ContactsItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","redux/filter/selectors.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectIsAddingContact = state => state.contacts.isAddingContact;\nexport const selectError = state => state.contacts.error;\n","import { MutatingDots } from 'react-loader-spinner';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const SpinnerMutatingDots = () => {\n  return (\n    <MutatingDots\n      height=\"100\"\n      width=\"100\"\n      color=\"#ff9900\"\n      secondaryColor=\"#ff9900\"\n      radius=\"12.5\"\n      ariaLabel=\"mutating-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport const SpinnerBorder = () => {\n  return <Spinner animation=\"border\" size=\"sm\" />;\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { options } from 'utils/optionsToastStyled';\nimport './ContactForm.css';\n\nimport {\n  selectContacts,\n  selectIsAddingContact,\n} from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { SpinnerBorder } from 'components/Spinner/Spinner';\nimport { TextField, Button } from '@mui/material';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const isAddingContact = useSelector(selectIsAddingContact);\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.find(contact => contact.name === name)) {\n      return toast.error(`${name} is already in the list`, options);\n    }\n\n    if (contacts.find(contact => contact.number === number)) {\n      return toast.error(`Number: ${number} is already in the list`, options);\n    }\n\n    if (name.trim() === '' || number.trim() === '') {\n      return toast.warn('Please fill in all fields!', options);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    toast.success(`${name} is added to the contact list!`, options);\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"form__contaiter\">\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // Styles\n          size=\"medium\"\n          color=\"warning\"\n          sx={{ width: '400px' }}\n        />\n        <TextField\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          // Styles\n          size=\"medium\"\n          color=\"warning\"\n          sx={{ width: '400px' }}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"warning\"\n          size=\"large\"\n          sx={{\n            width: '200px',\n            height: '50px',\n            fontSize: '15px',\n            padding: '2px',\n            marginTop: '10px',\n          }}\n        >\n          {isAddingContact ? <SpinnerBorder /> : 'Add contacts'}\n        </Button>\n      </form>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './ContactsItem.css';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { SpinnerBorder } from 'components/Spinner/Spinner';\nimport { Button } from '@mui/material';\n\nexport const ContactsItems = ({ contact }) => {\n  const [isDeletingContact, setIsDeletingContact] = useState(false);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <li className=\"contacts__item\">\n        <p className=\"contacts__text\">\n          <b>{contact.name}:</b> {contact.number}\n        </p>\n\n        <Button\n          onClick={() => {\n            setIsDeletingContact(true);\n            dispatch(deleteContact(contact.id));\n          }}\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"warning\"\n          size=\"large\"\n          sx={{ width: '120px', height: '35px' }}\n        >\n          {isDeletingContact ? <SpinnerBorder /> : 'Delete'}\n        </Button>\n      </li>\n    </>\n  );\n};\n\nContactsItems.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { useSelector } from 'react-redux';\nimport './ContactsList.css';\n\nimport { ContactsItems } from '../ContactsItem/ContactsItem';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(state => {\n    return state.contacts.items.filter(contact =>\n      contact.name\n        .toLowerCase()\n        .trim()\n        .includes(state.filter.toLowerCase().trim())\n    );\n  });\n\n  return (\n    <ul className=\"contacts__list\">\n      {contacts.map(contact => (\n        <ContactsItems contact={contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n","export const selectFilterContacts = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport './Filter.css';\n\nimport { filterContacts } from 'redux/filter/filterSlice';\nimport { selectFilterContacts } from 'redux/filter/selectors';\n\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterContacts);\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <div className=\"filter__container\">\n      <TextField\n        onChange={changeFilter}\n        value={filter}\n        label=\"Find contacts by name\"\n        type=\"text\"\n        id=\"standard-basic\"\n        variant=\"standard\"\n        // Style\n        color=\"warning\"\n        size=\"medium\"\n        sx={{ width: '250px' }}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport './Contacts.css';\n\nimport { SpinnerMutatingDots } from 'components/Spinner/Spinner';\nimport { ContactsForm } from 'components/Contacts/ContactsForm/ContactForm';\nimport { ContactsList } from 'components/Contacts/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"phonebook-container\">\n      <h1 className=\"phonebook-title\">Phonebook</h1>\n      <ContactsForm />\n\n      {contacts.length !== 0 && (\n        <div className=\"contacts__container\">\n          <h2 className=\"contacts__title\">Contacts</h2>\n\n          <Filter />\n          <ContactsList />\n        </div>\n      )}\n      {isLoading && !error && contacts.length === 0 && <SpinnerMutatingDots />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsAddingContact","isAddingContact","selectError","error","SpinnerMutatingDots","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","SpinnerBorder","Spinner","animation","size","ContactsForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","name","elements","value","number","find","contact","toast","options","trim","addContact","reset","className","TextField","label","type","id","variant","pattern","title","sx","Button","fontSize","padding","marginTop","ContactsItems","useState","isDeletingContact","setIsDeletingContact","onClick","deleteContact","ContactsList","filter","toLowerCase","includes","map","selectFilterContacts","Filter","onChange","filterContacts","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}